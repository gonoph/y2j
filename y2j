#!/usr/bin/env python3

import json, yaml, sys, argparse, os

DOCUMENTATION="""
Requires: PyYAML
  You can install it like this for the current user:
    pip install -U PyYAML --user

Name the script either or both:
  y2j
  j2y

usage: (y2j | j2y) [-h] [input]

Converts (yaml | json) to (json | yaml)

positional arguments:
    input       input file

    optional arguments:
        -h, --help  show this help message and exit

---
This will convert yaml or json into the other format. For Example:

  name: Billy Holmes
  age:
    number: 100
    dogYears: true
  workHistory:
  - Red Hat

will be converted into (note that order is not guaranteed):

  {"age": {"dogYears": true, "number": 100}, "name": "Billy Holmes", "workHistory": ["Red Hat"]}

which will be converted back to:

  age:
    dogYears: true
    number: 100
  name: Billy Holmes
  workHistory:
    - Red Hat

"""

myself = os.path.basename(sys.argv[0])

types=[ 'y2j', 'j2y' ]
arg_type = filter(lambda x: x in types, [myself])

if not arg_type:
  print("Unknown command! [%s] isn't either of %s!\n" % (myself, types))
  exit(1)

def convert_yaml_to_json(inp):
  y = yaml.load(inp, Loader=yaml.SafeLoader)
  print(json.dumps(y))
  return 0

def convert_json_to_yaml(inp):
  # j = json.loads(inp)
  j = yaml.load(inp, Loader=yaml.SafeLoader)
  print('---')
  print(yaml.safe_dump(j, default_flow_style=False))
  return 0

arg_type=list(arg_type)[0]
arg_map=dict(
  y2j = [ 'Converts yaml to json', convert_yaml_to_json ],
  j2y = [ 'Converts json to yaml', convert_json_to_yaml ]
)

parser = argparse.ArgumentParser(description=arg_map[arg_type][0])
parser.add_argument('input', nargs='?', help='input file')
args = parser.parse_args()

if args.input:
  fs = open(args.input, 'r')
else:
  fs = sys.stdin

ret = 2
try:
  inp = fs.read()
  ret=arg_map[arg_type][1](inp)
finally:
  if fs != sys.stdin:
    fs.close()

exit(ret)
